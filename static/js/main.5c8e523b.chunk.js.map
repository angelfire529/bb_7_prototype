{"version":3,"sources":["js/scripts.js","TopNav.tsx","SideNav.tsx","Main.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["jQuery","document","ready","popover","click","toggleClass","toggle","on","e","stopPropagation","TopNav","react_default","a","createElement","className","data-toggle","href","SideNav","Main","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","src_TopNav","src_SideNav","React","Component","App","src_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.5c8e523b.chunk.js","sourcesContent":["import jQuery from 'jquery/dist/jquery';\r\n\r\nfunction initializeJS() {\r\n\r\n    //tool tips\r\n    // jQuery('.tooltips').tooltip();\r\n\r\n    //popovers\r\n    jQuery('.popovers').popover();\r\n\r\n    //custom scrollbar\r\n        //for html\r\n    /*jQuery(\"html\").niceScroll({styler:\"fb\",cursorcolor:\"#007AFF\", cursorwidth: '6', cursorborderradius: '10px', background: '#F7F7F7', cursorborder: '', zindex: '1000'});\r\n        //for sidebar\r\n    jQuery(\"#sidebar\").niceScroll({styler:\"fb\",cursorcolor:\"#007AFF\", cursorwidth: '3', cursorborderradius: '10px', background: '#F7F7F7', cursorborder: ''});\r\n        // for scroll panel\r\n     jQuery(\".scroll-panel\").niceScroll({styler:\"fb\",cursorcolor:\"#007AFF\", cursorwidth: '3', cursorborderradius: '10px', background: '#F7F7F7', cursorborder: ''});\r\n*/\r\n    //sidebar dropdown menu\r\n    // jQuery('#sidebar .sub-menu > a').click(function () {\r\n    //     var last = jQuery('.sub-menu.open', jQuery('#sidebar'));\r\n    //     jQuery('.menu-arrow').removeClass('arrow_carrot-right');\r\n    //     jQuery('.sub', last).slideUp(200);\r\n    //     var sub = jQuery(this).next();\r\n    //     if (sub.is(\":visible\")) {\r\n    //         jQuery('.menu-arrow').addClass('arrow_carrot-right');\r\n    //         sub.slideUp(200);\r\n    //     } else {\r\n    //         jQuery('.menu-arrow').addClass('arrow_carrot-down');\r\n    //         sub.slideDown(200);\r\n    //     }\r\n    //     var o = (jQuery(this).offset());\r\n    //     var diff = 200 - o.top;\r\n    //     if(diff>0)\r\n    //         jQuery(\"#sidebar\").scrollTo(\"-=\"+Math.abs(diff),500);\r\n    //     else\r\n    //         jQuery(\"#sidebar\").scrollTo(\"+=\"+Math.abs(diff),500);\r\n    // });\r\n\r\n    // sidebar menu toggle\r\n    // jQuery(function() {\r\n    //     function responsiveView() {\r\n    //         var wSize = jQuery(window).width();\r\n    //         if (wSize <= 768) {\r\n    //             jQuery('#container').addClass('sidebar-close');\r\n    //             jQuery('#sidebar > ul').hide();\r\n    //         }\r\n\r\n    //         if (wSize > 768) {\r\n    //             jQuery('#container').removeClass('sidebar-close');\r\n    //             jQuery('#sidebar > ul').show();\r\n    //         }\r\n    //     }\r\n    //     jQuery(window).on('load', responsiveView);\r\n    //     jQuery(window).on('resize', responsiveView);\r\n    // });\r\n\r\n    jQuery('.toggle-nav').click(function () {\r\n\t\t\tjQuery('.sidebar-menu').toggleClass('small');\r\n                jQuery('.sidebar-menu li span').toggle();\r\n    });\r\n\r\n    // //bar chart\r\n    // if (jQuery(\".custom-custom-bar-chart\")) {\r\n    //     jQuery(\".bar\").each(function () {\r\n    //         var i = jQuery(this).find(\".value\").html();\r\n    //         jQuery(this).find(\".value\").html(\"\");\r\n    //         jQuery(this).find(\".value\").animate({\r\n    //             height: i\r\n    //         }, 2000)\r\n    //     })\r\n    // }\r\n\r\n}\r\n\r\njQuery(document).ready(function(){\r\n    initializeJS();\r\n});\r\n\r\njQuery(document).on('click', '.mega-dropdown', function(e) {\r\n  e.stopPropagation()\r\n})","import React from 'react';\r\n\r\n\r\ninterface TopNavProps {}\r\n\r\nconst TopNav: React.FC<TopNavProps> = () =>  {\r\n    return <header className=\"navbar navbar-dark dark-bg \">\r\n    <span className=\"mega-dropdown\">\r\n        <a data-toggle=\"dropdown\" href=\"javascript: Void(0)\"><i className=\"icon_grid-3x3 poppers\"></i></a>\r\n    \r\n        <ul className=\"dropdown-menu mega-dropdown-menu row\">\r\n            <li className=\"col-sm-3\">\r\n                <ul>\r\n                    <li className=\"dropdown-header\">Manufacturing Intelligence</li>\r\n                    <li><a href=\"#\">Dashboards</a></li>\r\n                    <li><a href=\"#\">Reports</a></li>\r\n                    <li><a href=\"#\">Alerts</a></li>\r\n                    <li className=\"divider\"></li>\r\n                    <li className=\"dropdown-header\">Paperless Manufacturing</li>\r\n                    <li><a href=\"#\">Paperless Forms</a></li>\r\n                    <li><a href=\"#\">Assembly</a></li>\r\n                    <li><a href=\"#\">Form Administration</a></li>\r\n                </ul>\r\n            </li>\r\n            <li className=\"col-sm-3\">\r\n                <ul>\r\n                    <li className=\"dropdown-header\">Failure Analysis</li>\r\n                    <li><a href=\"#\">FA Records</a></li>\r\n                    <li><a href=\"#\">CAPA</a></li>\r\n                    <li><a href=\"#\">Reports</a></li>\r\n                    <li className=\"divider\"></li>\r\n                    <li className=\"dropdown-header\">Return Analysis</li>\r\n                    <li><a href=\"#\">RMA Records</a></li>\r\n                    <li><a href=\"#\">Reports</a></li>\r\n                </ul>\r\n            </li>\r\n            <li className=\"col-sm-3\">\r\n                <ul>\r\n                    <li className=\"dropdown-header\">Operations</li>\r\n                    <li><a href=\"#\">Process Control</a></li>\r\n                    <li><a href=\"#\">Geneology</a></li>\r\n                    <li><a href=\"#\">Reports</a></li>\r\n                    <li className=\"divider\"></li>\r\n                    <li className=\"dropdown-header\">Quality Analytics</li>\r\n                    <li><a href=\"#\">Coloured Headers</a></li>\r\n                    <li><a href=\"#\">Primary Buttons & Default</a></li>\r\n                    <li><a href=\"#\">Calls to action</a></li>\r\n                </ul>\r\n            </li>\r\n            <li className=\"col-sm-3\">\r\n                <ul>\r\n                    <li className=\"dropdown-header\">Administration</li>\r\n                    <li><a href=\"#\">Data Sources</a></li>\r\n                    <li><a href=\"#\">Users and Security</a></li>\r\n                    <li><a href=\"#\">Custom Lists</a></li>\r\n                </ul>\r\n            </li>\r\n    \r\n        </ul>\r\n    \r\n    </span>\r\n    </header>\r\n}\r\n\r\nexport default TopNav;","import React from 'react'\r\n\r\n\r\ninterface SideNavProps { }\r\n\r\nconst SideNav: React.FC<SideNavProps> = () => {\r\n    return (\r\n        <aside>\r\n            <div className=\"nav-collapse\">\r\n                <ul className=\"sidebar-menu\">\r\n                    <li className=\"sub-menu\">\r\n                        <div className=\"toggle-nav\">\r\n                            <i className=\"arrow_carrot-2left\"></i>\r\n                        </div>\r\n                    </li>\r\n                    <li className=\"active\">\r\n                        <a className=\"\" href=\"#\">\r\n                            <i className=\"icon_house_alt\"></i>\r\n                            <span>Dashboard</span>\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default SideNav","import React from 'react'\r\nimport TopNav from './TopNav'\r\nimport SideNav from './SideNav';\r\n\r\n\r\nclass Main extends React.Component<{}, {}> {\r\n    constructor(props: any) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <section>\r\n               <TopNav />\r\n                <SideNav />\r\n            </section>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport 'bootstrap/dist/js/bootstrap.bundle';\nimport './js/scripts';\nimport './styles/App.scss';\nimport Main from './Main';\n\nconst App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <Main></Main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}